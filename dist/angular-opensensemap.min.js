/*! angular-opensensemap v1.0.1 2016-11-17 */
!function(a,b,c){"use strict";b.module("openSenseMap",[]).provider("OpenSenseMap",function(){var a={};a.boxId=null,a.apiKey=null,this.setBoxId=function(b){return a.boxId=b,a.boxId},this.getBoxId=function(){return a.boxId},this.setApiKey=function(b){return a.apiKey=b,a.apiKey};var c={};c.toQueryString=function(a){var c=[];return b.forEach(a,function(a,b){this.push(encodeURIComponent(b)+"="+encodeURIComponent(a))},c),c.join("&")},a.apiBaseUrl="https://api.opensensemap.org",this.$get=["$q","$http",function(b,d){function e(){this.apiBaseUrl=a.apiBaseUrl,this.boxId=a.boxId,this.apiKey=a.apiKey,this.toQueryString=c.toQueryString}return e.prototype={api:function(a,c,e,f,g){var h=b.defer();return d({url:this.apiBaseUrl+a,method:c?c:"GET",params:e,data:f,headers:g,withCredentials:!1}).success(function(a){h.resolve(a)}).error(function(a){h.reject(a)}),h.promise},_auth:function(){var a={"X-ApiKey":this.apiKey};return a},getBoxes:function(){return this.api("/boxes")},getBox:function(a){return this.api("/boxes/"+a)},getScript:function(a){return this.api("/boxes/"+a+"/script","GET",null,null,this._auth())},createBox:function(a){return this.api("/boxes","POST",null,a)},updateBox:function(a,b){return this.api("/boxes/"+a,"PUT",null,b,this._auth())},deleteBox:function(a){return this.api("/boxes/"+a,"DELETE",null,null,this._auth())},getLastMeasurements:function(a){return this.api("/boxes/"+a+"/sensors")},postNewMeasurement:function(a){return this.api("/boxes/"+a,"POST",null,null,this._auth())},getMeasurements:function(a){return this.api("/boxes/"+a+"/data","GET",null,{})},setApiKey:function(a){return this.apiKey=a,a},validateApiKey:function(a){return this.api("/users/"+a,"GET",null,null,this._auth())},getStats:function(){return this.api("/stats")}},new e}]})}(window,angular);